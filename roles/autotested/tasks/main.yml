---

- name: Docker Service Restarted
  service:
  args:
    name: docker
    state: restarted

- name: Base directory of Docker Autotest is defined
  set_fact:
    autotest_docker_path: "{{ autotest_dest_dir }}/client/tests/docker"

- name: Autotest directory is removed
  file:
    path: "{{ autotest_dest_dir }}"
    state: absent

- name: Cached Autotest is copied
  synchronize:
    dest: "{{ autotest_dest_dir }}"
    src: "{{ docker_autotest_cache_dir }}/autotest/"
    rsync_opts:
        - "--exclude=.git"
  # Rarely should need to debug the massive list of files
  no_log: true

- name: Untracked RELEASE-VERSION is removed
  file:
    path: "{{ autotest_dest_dir }}/RELEASE-VERSION"
    state: absent

- name: Cached Docker Autotest is copied
  synchronize:
    dest: "{{ autotest_docker_path }}"
    src: "{{ docker_autotest_cache_dir }}/autotest-docker/"
    rsync_opts:
        - "--exclude=.git"
  # Rarely should need to debug the massive list of files
  no_log: true

- name: Cached bugzilla module is copied
  synchronize:
    dest: "{{ autotest_docker_path }}"
    src: "{{ docker_autotest_cache_dir }}/python-bugzilla/bugzilla"
    rsync_opts:
        - "--exclude=.git"
  # Rarely should need to debug the massive list of files
  no_log: true
  when: docker_autotest.enable_bugzilla is defined and
        docker_autotest.enable_bugzilla

- name: Custom configuration is cleared
  file:
  args:
    path: "{{ autotest_docker_path }}/config_custom"
    state: absent

- name: Custom configuration directory exists
  file:
  args:
    path: "{{ autotest_docker_path }}/config_custom"
    state: directory

- include: test_image_fqin.yml

# Hook for inclusion of additional configuration templates/files
- name: Resolve docker_autotest templates
  template:
  args:
    dest: "{{ item.dest | default(omit) }}"
    follow: "{{ item.follow | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    selevel: "{{ item.selevel | default(omit) }}"
    serole: "{{ item.serole | default(omit) }}"
    setype: "{{ item.setype | default(omit) }}"
    seuser: "{{ item.seuser | default(omit) }}"
    src: "{{ item.src | default(omit) }}"
    validate: "{{ item.validate | default(omit) }}"
  with_items: '{{ docker_autotest.templates }}'
  when: docker_autotest.templates is defined and
        docker_autotest.templates != None

- include: configure_defaults.yml

- include: configure_control.yml

- name: Results directory is empty
  file:
  args:
    path: "{{ autotest_dest_dir }}/client/results"
    state: absent
  when: docker_autotest.execute

- name: Junit results don't exist
  file:
  args:
    path: "/tmp/results.junit"
    state: absent
  when: docker_autotest.execute

- name: Docker autotest execution variable is shown
  debug: var=docker_autotest
  when: docker_autotest is defined

- name: Execute Docker autotest
  shell: "export AUTOTEST_PATH={{ autotest_dest_dir }} && $AUTOTEST_PATH/client/autotest-local {{ autotest_docker_path }}/control"
  args:
    chdir: "{{ autotest_docker_path }}"
  register: autotest_execution
  async: 14401
  poll: 60
  when: docker_autotest.execute

- include: produce_results.yml
  when: autotest_execution is defined

- include: collect_results.yml
  when: autotest_execution is defined
