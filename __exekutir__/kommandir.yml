---

################################################################
# N/B: This may be running on an old (2.1)  version of ansible #
################################################################

# Included by ALL context playbooks.
# Make sure that a kommandir exists, is installed, accessable
# and it's workspace is in-sync with kommandir_workspace on exekutir

- hosts: exekutir
  # Assume inventory is incomplete (kommandir is unreachable)
  gather_facts: False
  pre_tasks:
    - name: Gather exekutir facts exclusive of other inventory hosts
      setup:
  # N/B: Role dependencies in use (see roles/*/meta/main.yml)
  roles:
    - compatible_ansible
    # ONLY create the initial workspace once.  Forever after
    # it's rsync'd back and forth by 'kommandir_workspace_setup'
    # and 'kommandir_to_exekutir_sync'.
    - role: exekutir_workspace_setup
      # Setting it up after the job is done would be pointless.
      # job_xn_done is defined by the common role
      when: not job_xn_done
    # Refresh exekutir's kommandir_workspace_dirty flag
    - role: inventory_updated
      # Define a list variable only for this role
      inventory_hostnames:
        - exekutir

- hosts: kommandir
  gather_facts: False
  # Ensure exclusive lock is released, even on role failure
  force_handlers: True
  # N/B: Role dependencies in use (see roles/*/meta/main.yml)
  roles:
    # Lock is released by a handler
    - role: exekutir_lock
      lock_type: "exclusive"
    # Takes care of both initialization and sync. from exekutir -> kommandir
    - role: kommandir_workspace_setup
      # Setting it up after the job is done would be pointless
      when: not job_xn_done
    # Syncing from kommandir doesn't make sense until after job.xn runs
    - role: kommandir_to_exekutir_sync
      when: job_xn_done
    # Refresh kommandir and exekutir's kommandir_workspace_dirty flags
    - role: inventory_updated
      inventory_hostnames:
        - kommandir
        - exekutir
